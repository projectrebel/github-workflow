name: Production Deployment

concurrency: production_deployment

on:
  release:
    types:
      - released

jobs:
  code-checks:
    name: Code Checks
    uses: ./.github/workflows/ci-checks.yml
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  production-deploy:
    name: Production Deployment
    needs: code-checks
    runs-on: ubuntu-22.04
    steps:
      - uses: docker-practice/actions-setup-docker@master
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: "{php-version}"

      - uses: actions/checkout@v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install JS Dependencies
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: 'npm'
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli

      - name: Deploy Environment
        run: vapor deploy production
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
